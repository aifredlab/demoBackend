#====================================================================
# JPA 설정
#====================================================================

# create: 기존 스키마 제거 후 다시 생성, create-drop: 기존 스키마 제거 후 다시 생성, 종료 시 제거, update: DB 스키마와 비교해, 엔티티에 변화가 있으면 DB 칼럼 추가 (제거는 하지 않음), validate: 시작 시 Entity와 DB 스키마 구조를 비교해서 같은지만 확인, 일치하지 않으면 에러 발생, none: 아무것도 하지 않음
spring.jpa.hibernate.ddl-auto=create-drop 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.database-platform: org.hibernate.dialect.MariaDBDialect

#DDL 수행후 실행될 SQL파일
spring.jpa.defer-datasource-initialization=true 
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.mode=always

spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:mysql://localhost:3306/aifred?serverTimezone=Asia/Seoul

#데이터베이스 계정
spring.datasource.username=sa
spring.datasource.password=
#spring.datasource.username=aifred
#spring.datasource.password=aifred!@#

#H2 Console 설정
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# logging
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.max-file-size=100MB
logging.file.name=logs/aifred.log
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul


